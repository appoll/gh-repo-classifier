import csv
import re
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.model_selection import GridSearchCV
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import precision_score
import sys
sys.path.append('..')

from collection.labels import Labels


def cleanString(s):
    p = re.compile('(?<=[a-z])(?=[A-Z])')
    newS = p.sub(r' ',s)
    newS = re.sub('[0-9]+',' NN ',newS)
    newS = re.sub('[^a-zA-Z]',' ',newS)
    newS = re.sub('\W+',' ',newS)
    return newS.strip().lower()

def normalizeFile(paths):
    
    newPaths = ''
    for path in paths.split(' '):
        count = 0
        splited_string = path.split('/')
        newPath = ''
        for s in splited_string:
            if s != '':
                newPath += '/'+str(count)
                count = count + 1
        newPaths += newPath +' '
    return newPaths
def get_repo_classes():
    file_names  = list()
    file_names.append('../exploration/labelled/features/trees_data_%s.txt' % Labels.data)
    file_names.append('../exploration/labelled/features/trees_data_%s.txt' % Labels.dev)
    file_names.append('../exploration/labelled/features/trees_data_%s.txt' % Labels.web)
    file_names.append('../exploration/labelled/features/trees_data_%s.txt' % Labels.hw)
    file_names.append('../exploration/labelled/features/trees_data_%s.txt' % Labels.docs)
    file_names.append('../exploration/labelled/features/trees_data_%s.txt' % Labels.edu)
    file_names.append('../exploration/labelled/features/trees_data_%s.txt' % Labels.uncertain)
    csv.field_size_limit(sys.maxsize)
    data = list()
    Y    = list()
    for i in range(len(file_names)):
        f = open(file_names[i],'rb')
        csv_content = csv.reader(f,delimiter=' ',quotechar='\"')
        for row in csv_content:
            Y.append(i)
            repo = row[6]
            print repo



    

get_repo_classes()
